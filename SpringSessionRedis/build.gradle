buildscript {
	ext {
		springBootVersion = '1.3.7.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot' 
apply plugin: 'war'


war {
	baseName = 'springsession'

}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-redis')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.session:spring-session')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('com.h2database:h2')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test') 
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}


/**
 * Copies all the project dependencies into a directory 
 * so that a seperate docker layer could be built for these. 
 * Since these dependencies will be changing infrequently, therefore
 * they will be kept in a seprate layer so that the size of final 
 * docker layer remains small. 
 */
task exportProjectLibsForDocker(type: Copy) {
	// into "build/lib"
	into "project-libraries-for-docker-layer"
	from configurations.providedCompile
	from configurations.providedRuntime
	from configurations.runtime
	from configurations.compile


}

/*The following methods will ensure that the project libraries will be update
 * upon every build operation
 * */
war.dependsOn 'exportProjectLibsForDocker'
build.dependsOn 'exportProjectLibsForDocker'
